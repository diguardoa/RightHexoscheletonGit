function [xPIP_s,yPIP_s,zPIP_s,xK_s,yK_s,zK_s,PIP_FE_s,MCP_FE_s] = calc_points(G1,G2,MCP,CMC,r2,l_dist,l_meta,CMC_FE,CMC_AA)
%CALC_POINTS Summary of this function goes here
%   Detailed explanation goes here
% Input
%l_dist = l_proxi;
xG1 = G1(1);
yG1 = G1(2);
zG1 = G1(3);
xG2 = G2(1);
yG2 = G2(2);
zG2 = G2(3);
xMCP = MCP(1);
yMCP = MCP(2);
zMCP = MCP(3);
xCMC = CMC(1);
yCMC = CMC(2);
zCMC = CMC(3);
MCP_FE = pi/4-(-CMC_FE);
% Output
syms xPIP yPIP zPIP xK yK zK PIP_FE MCP_AA
MCP_FE_s = MCP_FE;

% Before:
% scrivo distanza K_PIP
K_PIP =  (xPIP - xK)^2 + (yPIP - yK)^2 + (zPIP - zK)^2 ;
% scrivo distanza PIP_MCP
PIP_MCP = (xPIP - xMCP)^2 + (yPIP - yMCP)^2 + (zPIP - zMCP)^2;
% scrivo distanza K_MCP
K_MCP = (xK - xMCP)^2 + (yK - yMCP)^2 + (zK - zMCP)^2 ;
% scrivo distanza K_G2
K_G2 = (xK - xG2)^2 + (yK - yG2)^2 + (zK - zG2)^2 ;
% scrivo distanza PIP_CMC
PIP_CMC = (xPIP - xCMC)^2 + (yPIP - yCMC)^2 + (zPIP - zCMC)^2;
% 1. PIP appartiene al piano passante per G,G1,MCP
matr1 = [xPIP - xG1, yPIP - yG1, zPIP - zG1; ...
        xG2 - xG1, yG2 - yG1, zG2 - zG1; ...
        xMCP - xG1, yMCP - yG1, zMCP - zG1];

eq1 = det(matr1);

% 2. K appartiene al piano passante per G, G1, MCP
matr2 = [xK - xG1, yK - yG1, zK - zG1; ...
        xG2 - xG1, yG2 - yG1, zG2 - zG1; ...
        xMCP - xG1, yMCP - yG1, zMCP - zG1];

eq2 = det(matr2);

% 3. K e' il punto di tangenza tra la circonferenza di raggio r2 e la retta
% passante per la falange prossimale. Scrivo dunque il teorema di pitagora

eq3 = r2^2 + K_PIP -( (xPIP - xG2)^2 + (yPIP - yG2)^2 + (zPIP - zG2)^2);

% 4. Impongo che K_G2 sia uguale a r2 (noto)

eq4 = K_G2 - r2^2;

% 5. Scrivo il teorema dei coseni che lega K, PIP e MCP

eq14 = K_MCP -( K_PIP + l_dist^2 - 2*sqrt(K_PIP)*l_dist*cos(PIP_FE));

l_proxi = sqrt(K_PIP);
eq12 =  xK - (xCMC - l_meta*cos(CMC_AA)*cos(CMC_FE) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096)) + (4967757600021511*l_meta*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + l_dist*sin(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064) + l_proxi*cos(PIP_FE)*(sin(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064) - cos(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))) + l_proxi*sin(PIP_FE)*(cos(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064) + sin(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))));
eq13 = yK - (yCMC - l_dist*cos(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064)) - (4967757600021511*l_meta*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 - l_meta*cos(CMC_FE)*sin(CMC_AA) + l_dist*sin(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE)) + l_proxi*cos(PIP_FE)*(sin(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE)) - cos(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))) + l_proxi*sin(PIP_FE)*(sin(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064)) + cos(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE))));
eq5 = zK - (zCMC - l_meta*sin(CMC_FE) - l_proxi*cos(PIP_FE)*(cos(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) + sin(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096)) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) + l_proxi*sin(PIP_FE)*(sin(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) - cos(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096)) - l_dist*sin(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096));

% 6. Impongo PIP_MCP uguale a l_proxi

eq6 = PIP_MCP - l_dist^2;

% 7. relazione PIP_FE e MCP_FE

eq7 = PIP_FE - MCP_FE;
%load transformations.mat
eq9 = xPIP - (xCMC - l_meta*cos(CMC_AA)*cos(CMC_FE) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096)) + (4967757600021511*l_meta*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + l_dist*sin(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064));
eq10 = yPIP - (yCMC - l_dist*cos(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064)) - (4967757600021511*l_meta*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 - l_meta*cos(CMC_FE)*sin(CMC_AA) + l_dist*sin(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE)));
eq11 = zPIP - (zCMC - l_meta*sin(CMC_FE) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) - l_dist*sin(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096));
 
% eq9 = xPIP - xCMC + l_meta*cos(CMC_AA)*cos(CMC_FE) + l_dist*cos(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096)) - (4967757600021511*l_meta*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 - l_dist*sin(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064);
% eq10 = yPIP -yCMC + l_dist*cos(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064)) + (4967757600021511*l_meta*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + l_meta*cos(CMC_FE)*sin(CMC_AA) - l_dist*sin(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE));
% eq11 = zPIP - zCMC + l_meta*sin(CMC_FE) + l_dist*cos(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) + l_dist*sin(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096)
% 8. 
%teorema dei coseni con PIP, MCP e CMC proiettato nel piano G1,G2,MCP
eq8 = PIP_CMC - (l_meta^2 + l_dist^2 - 2*l_meta*l_dist*cos(MCP_FE));% == 0;
equations = [eq1;eq2;eq3;eq4;eq14;eq6;eq7;eq8]== zeros(8,1);
equations2 = [eq1;eq2;eq3;eq9;eq14;eq11;eq7;eq12;eq4]== zeros(9,1);
equations3 = [eq2;eq4;eq12;eq13;eq5;eq7;eq9;eq10;eq11] == zeros(9,1);
equations4 = [eq1;eq2;eq3;eq4;eq14;eq7;eq9;eq10;eq11] == zeros(9,1);
%equations(9) = zK < zG2;
%[PIP_FE_s,MCP_FE_s,xPIP_s,yPIP_s,zPIP_s,xK_s,yK_s,zK_s] = vpasolve(equations,[PIP_FE,MCP_FE,xPIP,yPIP,zPIP,xK,yK,zK],'random',true);%,[0,0,0,0,0,0,0,0]);
%[PIP_FE_s,MCP_FE_s,MCP_AA_s,xPIP_s,yPIP_s,zPIP_s,xK_s,yK_s,zK_s] = vpasolve(equations4,[PIP_FE,MCP_FE,MCP_AA,xPIP,yPIP,zPIP,xK,yK,zK]);%,[0,0,0,0,0,0,0,0]);
%MCP_AA_s

%% Trovo MCP_AA
%[PIP_FE_s,MCP_FE_s,xPIP_s,yPIP_s,zPIP_s,xK_s,yK_s,zK_s] = vpasolve(equations,[PIP_FE,MCP_FE,xPIP,yPIP,zPIP,xK,yK,zK],'random',true);%,[0,0,0,0,0,0,0,0]);
eq_MCP_AA = [eq1;eq9;eq10;eq11] == zeros(4,1);
% [xPIP_s,yPIP_s,zPIP_s,MCP_AA_s] = vpasolve(eq_MCP_AA,[xPIP,yPIP,zPIP,MCP_AA],'random',true)%,[0,0,0,0,0,0,0,0]);
% mcp = mod(eval(MCP_AA_s),2*pi);
% if mcp > 3*pi/2
%     MCP_AA = mcp - 2*pi;
% else if mcp >pi/2
%         MCP_AA = mcp - pi;
%     else
%         MCP_AA = mcp;
%     end
% end
MCP_AA_s = findMCP_AA_fun2(CMC_AA,CMC_FE,MCP_FE,l_dist,l_meta,xCMC,xG1,xG2,xMCP,yCMC,yG1,yG2,yMCP,zCMC,zG1,zG2,zMCP)

[val, where] = min(abs(real(MCP_AA_s)));
MCP_AA_s = MCP_AA_s(where);
MCP_AA = MCP_AA_s;

%% 
% clear all
% syms xCMC yCMC zCMC MCP_FE MCP_AA CMC_AA CMC_FE l_meta l_dist
xPIP_s = (xCMC - l_meta*cos(CMC_AA)*cos(CMC_FE) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064) - sin(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096)) + (4967757600021511*l_meta*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + l_dist*sin(MCP_FE)*((4967757600021511*cos(MCP_AA)*(sin(CMC_AA) + (4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + (24678615572571482867467662723121*cos(CMC_FE)*sin(CMC_AA))/6582018229284824168619876730229402019930943462534319453394436096))/81129638414606681695789005144064 - (4967757600021511*sin(CMC_AA))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*(cos(CMC_AA)*cos(CMC_FE) - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + cos(CMC_AA)*sin(CMC_FE) + (4967757600021511*cos(CMC_FE)*sin(CMC_AA))/81129638414606681695789005144064));
yPIP_s = (yCMC - l_dist*cos(MCP_FE)*(cos(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)) + sin(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064)) - (4967757600021511*l_meta*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 - l_meta*cos(CMC_FE)*sin(CMC_AA) + l_dist*sin(MCP_FE)*((4967757600021511*cos(CMC_AA))/81129638414606681695789005144064 - (4967757600021511*cos(MCP_AA)*(cos(CMC_AA) + (24678615572571482867467662723121*cos(CMC_AA)*cos(CMC_FE))/6582018229284824168619876730229402019930943462534319453394436096 - (4967757600021511*sin(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064))/81129638414606681695789005144064 + (4967757600021511*sin(MCP_AA)*((4967757600021511*cos(CMC_AA)*sin(CMC_FE))/81129638414606681695789005144064 + cos(CMC_FE)*sin(CMC_AA)))/81129638414606681695789005144064 - (4967757600021511*cos(CMC_AA)*cos(CMC_FE))/81129638414606681695789005144064 + sin(CMC_AA)*sin(CMC_FE)));
zPIP_s = (zCMC - l_meta*sin(CMC_FE) - l_dist*cos(MCP_FE)*(cos(MCP_AA)*sin(CMC_FE) + sin(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064)) - l_dist*sin(MCP_FE)*(cos(CMC_FE) - (4967757600021511*sin(CMC_FE)*sin(MCP_AA))/81129638414606681695789005144064 + (4967757600021511*cos(MCP_AA)*((4967757600021511*cos(CMC_FE))/81129638414606681695789005144064 - 4967757600021511/81129638414606681695789005144064))/81129638414606681695789005144064 + 24678615572571482867467662723121/6582018229284824168619876730229402019930943462534319453394436096));
% matlabFunction(xPIP_s,yPIP_s,zPIP_s,'file','findPIP_fun')

%% 
% eq3_2 = subs(eq3,[xPIP yPIP zPIP],[xPIP_s yPIP_s zPIP_s]);
% eq4_2 = subs(eq4,[xPIP yPIP zPIP],[xPIP_s yPIP_s zPIP_s]);
% eq14_2 = subs(eq14,[xPIP yPIP zPIP],[xPIP_s yPIP_s zPIP_s]);
% eq_PIP_FE = [eq3_2;eq4_2;eq14_2;eq2] == zeros(4,1)
% [xK_s,yK_s,zK_s,PIP_FE_s] = vpasolve(eq_PIP_FE,[xK,yK,zK,PIP_FE],'random',true)%,[0,0,0,0,0,0,0,0]);
PIP = [xPIP_s yPIP_s zPIP_s];
[xK_s,yK_s,zK_s] = sysEqn(PIP, G2, G1,r2);
[val, where] = min(zK_s);
xK_s = xK_s(where);
yK_s = yK_s(where);
zK_s = zK_s(where);
% xK_s = xPIP_s;
% yK_s = yPIP_s;
% zK_s = zPIP_s;
PIP_FE_s = MCP_FE_s;
end

